
# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

imports:
    - { resource: '@AdminBundle/Resources/config/services.yml' }

services:
    # main configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    api_key_authenticator:
        class: AppBundle\Security\TokenAuthenticator
        arguments: ["@router"]
        public: true

    app.stripe:
        class: AppBundle\Services\StripeService
        arguments: ["%stripe_secret_key%"]
        public: true

    app.pagination:
        class: AppBundle\Services\PaginationService
        public: true

    app.sorting:
        class: AppBundle\Services\SortingService
        arguments: ["@session", "@doctrine.orm.default_entity_manager"]
        public: true

    app.ipstack:
        class: AppBundle\Services\IpstackService
        arguments: ["@session","%ipstack_api_key%"]
        public: true

    app.form.registration:
        class: AppBundle\Form\RegistrationType
        tags:
            - { name: form.type, alias: app_user_registration }

    ap_user.edit.form.type:
        class: AppBundle\Form\ProfileFormType
        tags:
            - { name: form.type, alias: app_user_profile }

    app.authentication_success_handler:
        class: AppBundle\EventListener\AuthenticationSuccessHandler
        arguments:
            - "@mailer"
            - "%mailer_user%"
        tags:
            - { name: kernel.event_listener, event: security.interactive_login, method: onSecurityInteractiveLogin }

    my.custom.user_provider:
        class:        AppBundle\Security\Core\MyFOSUBUserProvider
        arguments: ['@fos_user.user_manager', { vkontakte: 'vkontakte_id', github: 'github_id' }]

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    AppBundle\Services\FileUploader:
        arguments:
            $targetDirectory: '%upload_directory%'

    AppBundle\Controller\FOSUserBundle\RegistrationController:
        decorates: fos_user.registration.controller
        arguments:
            $eventDispatcher:  '@event_dispatcher'
            $formFactory: '@fos_user.registration.form.factory'
            $userManager:  '@fos_user.user_manager'
            $tokenStorage:  '@security.token_storage'

    AppBundle\Controller\FOSUserBundle\SecurityController:
        decorates: fos_user.security.controller
        arguments:
            $tokenManager:  '@security.csrf.token_manager'
