<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NonUniqueResultException;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;

/**
 * FeedbackRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FeedbackRepository extends EntityRepository
{
    /**
     * @param int $page
     * @param int $theNumberOnThePage
     * @return mixed
     */
    public function findByPage(int $page, int $theNumberOnThePage)
    {
        $lastResult  = $page * $theNumberOnThePage;
        $firstResult = $lastResult - $theNumberOnThePage;

        return $this
            ->createQueryBuilder('f')
            ->setFirstResult($firstResult)
            ->setMaxResults($theNumberOnThePage)
            ->orderBy('f.created', 'DESC')
            ->getQuery()
            ->getResult();
    }

    /**
     * @return mixed
     * @throws NonUniqueResultException
     */
    public function getTheQuantityOfAllFeedbacks()
    {
        return $this
            ->createQueryBuilder('f')
            ->select('count(f.id)')
            ->getQuery()
            ->getSingleScalarResult();
    }

    /**
     * @return mixed
     */
    public function findUploadFeedback()
    {
        $specialValues = '71afcc102de47d1d70e45d6179cd496424d8498c';

        return $this
            ->createQueryBuilder('f')
            ->where('f.name=:name')
            ->andWhere('f.email=:email')
            ->andWhere('f.message=:message')
            ->setParameters(['name' => $specialValues, 'email' => $specialValues . '@mail.ru', 'message' => $specialValues])
            ->getQuery()
            ->getResult();
    }
}
